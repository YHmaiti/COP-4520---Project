# this still requires some changes before we put it in the paper or keep it on th github

# Also, add the EXECUTORSERVICE related components

MergeSortParallel(arr, numThreads)
    if arr.length <= 1
        return arr
    mid = arr.length / 2
    leftArray = arr[0...mid-1]
    rightArray = arr[mid...arr.length-1]
    t1= future(MergeSortParallel(leftArray, numThreads))
    t2= future(MergeSortParallel(rightArray, numThreads))
    resultLeft= get(resultLeft)
    resultRight= get(resultRight)
    return MergeSortParallel(resultLeft, resultRight)

merge(left, right)
    result = integer array of size left.length + right.length
    i = j = k = 0
    while i < left.length and j < right.length
        if left[i] <= right[j]
            result[k] = left[i]
            i = i + 1
        else
            result[k] = right[j]
            j = j + 1
        k = k + 1
    while i < left.length
        result[k] = left[i]
        i = i + 1
        k = k + 1
    while j < right.length
        result[k] = right[j]
        j = j + 1
        k = k + 1
    return result